# https://swagger.io/docs/specification/about/
# https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md
openapi: 3.0.3

info:
  title: "Testomato API"
  description: |
    If you would like to participate in the future development of our
    roadmap, please don't be shy! We'd love to hear your suggestions:
    support@testomato.com

  termsOfService: https://www.testomato.com/terms-of-service
  version: 1.0.0
  contact:
    email: support@testomato.com

servers:
  - url: https://testomato.com/api/
    description: Testomato

paths:
  /project/create:
    post:
      operationId: Create Project
      description: |
        Create a new Project from array of URLs. Successful response will be
        formatted as [JSONP](https://en.wikipedia.org/wiki/JSONP) stream.
        You can add **up to 30 URLs** at once.
      security:
        - ApiKey: [ ]
      tags:
        - Project
      parameters:
        - name: period
          required: false
          description: Check period interval as string
          in: query
          schema:
            type: string
            enum: [ 5 minutes, 30 minutes, 1 hour, 8 hours, 1 day, 7 days, false ]
            default: 5 minutes
      requestBody:
        content:
          application/json:
            schema:
              properties:
                urls:
                  type: array
                  items:
                    type: string
                  description: Array of URLs
                  example: [ "https://www.example.com", "https://testomato.com" ]
                blank:
                  type: boolean
                  default: false
                  description: Create empty project (`true`) or preset project (`false`)

      responses:
        400:
          description: Error when trying to *create more than 30 projects* at once or `period` parameters is invalid.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: Sorry! You can only add 30 projects at a time.
                  error:
                    type: boolean
                    default: true
        403:
          description: Error when you have reached your **subscription project limit**.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: You have reached your project limit.
                  error:
                    type: boolean
                    default: true
        406:
          description: When you try send invalid or not supported URL
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: Oops, we're sorry! The URL "xxx" is not valid
                  error:
                    type: boolean
                    default: true
        500:
          description: Project creation failed with fatal error (please contact us at support@testomato.com).
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: Oops, we're sorry! Project creation failed. Please try later or contact us.
                  error:
                    type: boolean
                    default: true
        200:
          description: There Successfully created projects. Response is <a href="https://en.wikipedia.org/wiki/JSONP" target="_blank">JSONP</a> payload with individual projects.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: schemas/Project.yaml
                  - type: object
                    properties:
                      originalUrl:
                        description: Original URL that was processed
                        type: string

  /project/{id}:
    parameters:
      - name: id
        description: A unique Project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string

    get:
      operationId: Get Project
      description: Retrieve Project by ID
      security:
        - ApiKey: [ ]
      tags:
        - Project
      responses:
        404:
          $ref: responses/NotFound.yaml
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: schemas/Project.yaml
                  - $ref: schemas/Permissions.yaml

    put:
      operationId: Update Project
      description: Update selected Project
      tags:
        - Project
      security:
        - ApiKey: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: schemas/Project.yaml
      responses:
        200:
          $ref: responses/SuccessMessage.yaml
        404:
          $ref: responses/NotFound.yaml

    delete:
      operationId: Delete Project
      description: Delete selected Project
      tags:
        - Project
      security:
        - ApiKey: [ ]
      responses:
        200:
          $ref: './responses/SuccessMessage.yaml'
        404:
          $ref: "./responses/NotFound.yaml"

  /project/{id}/status:
    parameters:
      - name: id
        description: A unique Project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
    get:
      operationId: Get Project status
      description: Get Project status
      tags:
        - Project
      security:
        - ApiKey: [ ]
      responses:
        200:
          $ref: responses/ProjectStatus.yaml

  /project/{id}/simple-status:
    parameters:
      - in: path
        required: true
        name: id
        description: A unique Project ID

    get:
      operationId: Get Project status - simplify
      description: Get simplify Project status
      tags:
        - Project
      security:
        - ApiKey: [ ]
      responses:
        200:
          $ref: responses/ProjectSimpleStatus.yaml

  /project/{id}/start:
    get:
      operationId: Starting Project
      description: Start all checks in project
      tags:
        - Project
      security:
        - ApiKey: [ ]
      parameters:
        - name: id
          description: A unique Project ID
          example: 5e9602e7a39e5a46428b457f
          allowEmptyValue: false
          required: true
          in: path
          schema:
            type: string
        - name: tests
          description: Array of
          in: query
          required: false
          example: [ '55ae166c25b395537a8b6029', '510fa4a3bd96e74c0200000b' ]
          schema:
            type: array
            items:
              type: string

      responses:
        200:
          $ref: responses/JobStartsSuccessfully.yaml

  /project/{ProjectId}/start/area/{AreaId}:
    parameters:
      - name: ProjectId
        description: A unique Project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
      - name: AreaId
        description: A unique Area/Group ID
        example: 55ae166c25b395537a8b6029
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string

    get:
      operationId: Starting Project Group
      description: Starting only specific group of Tests from Project
      tags:
        - Project
        - Group
      security:
        - ApiKey: [ ]
      parameters:
        - name: keep-alive
          description: Maintain the connection after starting the tests
          required: false
          example: false
          in: query
          schema:
            type: boolean
        - name: continue
          description: Send the partial result and move on?
          required: false
          example: false
          in: query
          schema:
            type: boolean
        - name: tests
          description: Array of selected Test IDs to run
          required: false
          in: query
          schema:
            type: array
            example: [ '6123aa3f136d2ab8038b4587', '51e6541cbd96e7f173000029' ]
            items:
              type: string
      responses:
        200:
          $ref: responses/JobStartsSuccessfully.yaml

  /project/{ProjectId}/job/{JobId}/results:
    parameters:
      - name: ProjectId
        description: A unique Project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
      - name: JobId
        description: A unique Job ID
        example: 55ae166c25b395537a8b6029
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string

    get:
      operationId: Get Project results
      description: Retrieve latest Project's checks results
      tags:
        - Project
      security:
        - ApiKey: [ ]
      responses:
        200:
          description: Project results
          content:
            application/json:
              schema:
                properties:
                  jobId:
                    type: string
                    description: A unique ID for each project job
                    example: 6346802f314d328b4a8b4579
                  total:
                    type: integer
                    description: The total number of tests performed
                    example: 28
                  failed:
                    type: integer
                    description: The number of failed tests
                    example: 0
                  processed:
                    type: boolean
                    description: Has this job already been processed
                    example: true
                  persist:
                    type: boolean
                    description: Is this job temporary of persist
                    example: true
                  startedAt:
                    type: integer
                    description: Time when job started (unix timestamp)
                    example: 1665564719
                  duration:
                    type: number
                    description: Duration of the job in seconds
                    example: 2.1946158409119
                  mode:
                    type: number
                    example: 0
                  areas:
                    description: List of areas
                    type: array
                    items:
                      type: string
                  results:
                    description: Array of test results -- each result has a testId, testName etc.
                    type: array
                    items:
                      type: string
  
  
  /project/{id}/regenerateApiKey:
    parameters:
      - name: id
        description: A unique Project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
    post:
      operationId: Regenerate API Key
      description: Regenerate project API key
      tags:
        - Project
      security:
        - ApiKey: [ ]
      responses:
        200:
          description: Successfully regenerated Project API key
          content:
            application/json:
              schema:
                properties:
                  apiKey:
                    type: string
                    example: 123456
                    description: New API key

  /tests/{id}:
    parameters:
      - name: id
        description: A unique Test ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string

    get:
      operationId: Get Test
      description: Retrieve test
      tags:
        - Checks
      responses:
        200:
          description: Test response
          content:
            application/json:
              schema:
                $ref: schemas/Test.yaml

components:
  securitySchemes:
    ApiKey:
      description: Project or User API key
      type: apiKey
      name: apiKey
      in: query
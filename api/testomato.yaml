# https://swagger.io/docs/specification/about/
openapi: 3.0.1

info:
  title: "Testomato API"
  description: |
    If you would like to participate in the future development of our
    roadmap, please don't be shy! We'd love to hear your suggestions:
    support@testomato.com

  version: 1.0.0
  contact:
    email: support@testomato.com

servers:
  - url: https://testomato.com/api/
    description: Testomato

paths:
  /project/create:
    post:
      operationId: Create Project
      description: |
        Create a new Project from array of URLs. Successful response will be
        formatted as [JSONP](https://en.wikipedia.org/wiki/JSONP) stream.
        You can add **up to 30 URLs** at once.
      security:
        - ApiKey: [ ]
      tags:
        - Project
      parameters:
        - name: period
          required: false
          description: Check period interval as string
          in: query
          schema:
            type: string
            enum: [ 5 minutes, 30 minutes, 1 hour, 8 hours, 1 day, 7 days, false ]
            default: 5 minutes
      requestBody:
        content:
          application/json:
            schema:
              properties:
                urls:
                  type: array
                  items:
                    type: string
                  description: Array of URLs
                  example: [ "https://www.example.com", "https://testomato.com" ]
                blank:
                  type: boolean
                  default: false
                  description: Create empty project (`true`) or preset project (`false`)

      responses:
        400:
          description: Error when trying to *create more than 30 projects* at once or `period` parameters is invalid.
        403:
          description: Error when you have reached your **subscription project limit**.
        406:
          description: When you try send invalid or not supported URL
        500:
          description: Project creation failed with fatal error (please contact us at support@testomato.com).
        200:
          description: There Successfully created projects. Response is <a href="https://en.wikipedia.org/wiki/JSONP" target="_blank">JSONP</a> payload with individual projects.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Project'
                  - type: object
                    properties:
                      originalUrl:
                        description: Original URL that was processed
                        type: string

  /project/{id}:
    get:
      operationId: Get Project
      description: Retrieve project by `Project ID`
      security:
        - ApiKey: [ ]
      tags:
        - Project
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        404:
          $ref: "./responses/NotFound.yaml"
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "./schemas/Project.yaml"
                  - type: object
                    properties:
                      permissions:
                        type: object
                        description: Project permissions for current user
                        properties:
                          read:
                            type: boolean
                            description: Can current user view results?
                          run:
                            type: boolean
                            description: Can current user run checks?
                          editTest:
                            type: boolean
                          edit:
                            type: boolean
                            description: Can current user edit project settings?
                          manageUsers:
                            description: Can current user manage others?
                            type: boolean
                          apiKey:
                            description: Can current user view apiKey?
                            type: boolean
                          leave:
                            description: Can current user leave project?
                            type: boolean

    put:
      operationId: Update Project
      description: Update selected project
      tags:
        - Project
      security:
        - ApiKey: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: './schemas/Project.yaml'
      responses:
        200:
          $ref: './responses/SuccessMessage.yaml'
        404:
          $ref: "./responses/NotFound.yaml"
      parameters:
        - $ref: "#/components/parameters/ProjectId"

    delete:
      operationId: Delete Project
      description: Delete selected Project
      tags:
        - Project
      responses:
        200:
          $ref: './responses/SuccessMessage.yaml'
        404:
          $ref: "./responses/NotFound.yaml"
      security:
        - ApiKey: [ ]
      parameters:
        - $ref: "#/components/parameters/ProjectId"

  /project/{id}/status:
    get:
      operationId: Get Project status
      description: Get Project status
      tags:
        - Project
      security:
        - ApiKey: [ ]
      parameters:
        - $ref: "#/components/parameters/ProjectId"
      responses:
        200:
          description: Successful response - full project status
          content:
            application/json:
              schema:
                properties:
                  project:
                    type: object
                    description: Basic project information
                    properties:
                      id:
                        type: string
                        description: Project ID
                      lastRun:
                        type: integer
                        description: Unix timestamp of last run
                        example: 1665407081
                      lastChange:
                        type: integer
                        description: Unix timestamp of last change
                        example: 1665263416
                      reported:
                        type: string
                        description: Was reported
                        example: ok
                      status:
                        type: string
                      msg:
                        type: string
                        description: Longer message about project status
                        example: Server returned HTTP status 200
                      shortMessage:
                        type: string
                        description: Short project status message
                        example: 200
                  total:
                    type: integer
                    description: Total count of checks
                    example: 12
                  failed:
                    type: integer
                    description: How much check has failed
                    example: 0
                  now:
                    type: integer
                    description: Current date time unix timestamp
                    example: 1665407098
                  tests:
                    type: array
                    items:
                      $ref: './schemas/Test.yaml'

  /project/{id}/simple-status:
    get:
      operationId: Get Project status - simplify
      description: Get simplify Project status
      tags:
        - Project
      security:
        - ApiKey: [ ]
      parameters:
        - $ref: "#/components/parameters/ProjectId"
      responses:
        200:
          description: Successful response - simplify project status
          content:
            application/json:
              schema:
                properties:
                  tests:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        url:
                          type: string
                        status:
                          type: string
                          enum: [ OK, Error message ]
                    example:
                      - name: Homepage
                        url: https://www.testomato.com
                        status: OK
                      - name: Contact
                        url: https://www.testomato.com/contact
                        status: Missing "example" in Website TEXT
                  total:
                    description: Total count of checks
                    type: integer
                    example: 2
                  failed:
                    description: Count of failing checks
                    example: 1

  /project/{id}/start:
    get:
      operationId: Starting Project
      description: Start all checks in project
      tags:
        - Project
      security:
        - ApiKey: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: tests
          description: Array of
          in: query
          required: false
          schema:
            type: array
            items:
              type: string

      responses:
        200:
          $ref: '#/components/responses/JobStartsSuccessfully'

  /project/{ProjectId}/start/area/{AreaId}:
    get:
      operationId: Starting Project Group
      description: Starting only specific group of Tests from Project
      tags:
        - Project
        - Group
      security:
        - ApiKey: [ ]
      parameters:
        - name: ProjectId
          description: A unique Project ID
          required: true
          in: path
          schema:
            type: string
            example: 50a9f72f14db3be812000233
        - name: AreaId
          description: A unique Group ID
          required: true
          in: path
          schema:
            type: string
            example: 6346b330314d3296738b456f
        - name: keep-alive
          description: Maintain the connection after starting the tests
          required: false
          in: query
          schema:
            type: boolean
            example: false
        - name: continue
          description: Send the partial result and move on?
          required: false
          in: query
          schema:
            type: boolean
            example: false
        - name: tests
          description: Array of selected Test IDs to run
          required: false
          in: query
          schema:
            type: array
            example: [ ]
            items:
      responses:
        200:
          $ref: '#/components/responses/JobStartsSuccessfully'

  /project/{id}/job/{jobid}/results:
    get:
      operationId: Get Project results
      description: Retrieve latest Project's checks results
      tags:
        - Project
      security:
        - ApiKey: [ ]
      parameters:
        - $ref: "#/components/parameters/ProjectId"
      responses:
        200:
          description: Project results
          content:
            application/json:
              schema:
                properties:
                  jobId:
                    type: string
                    description: A unique ID for each project job
                    example: 6346802f314d328b4a8b4579
                  total:
                    type: integer
                    description: The total number of tests performed
                    example: 28
                  failed:
                    type: integer
                    description: The number of failed tests
                    example: 0
                  processed:
                    type: boolean
                    description: Has this job already been processed
                    example: true
                  persist:
                    type: boolean
                    description: Is this job temporary of persist
                    example: true
                  startedAt:
                    type: integer
                    description: Time when job started (unix timestamp)
                    example: 1665564719
                  duration:
                    type: number
                    description: Duration of the job in seconds
                    example: 2.1946158409119
                  mode:
                    type: number
                    example: 0
                  areas:
                    description: List of areas
                    type: array
                  results:
                    description: Array of test results -- each result has a testId, testName etc.
                    type: array

  /project/{id}/regenerateApiKey:
    post:
      operationId: Regenerate API Key
      description: Regenerate project API key
      tags:
        - Project
      security:
        - ApiKey: [ ]
      parameters:
        - $ref: "#/components/parameters/ProjectId"
      responses:
        200:
          description: Successfully regenerated Project API key
          content:
            application/json:
              schema:
                properties:
                  apiKey:
                    type: string
                    example: 123456
                    description: New API key

  /tests/{id}:
    get:
      operationId: Get Test
      description: Retrieve test
      tags:
        - Checks
      parameters:
        - $ref: "#/components/parameters/TestId"
      responses:
        200:
          description: Test response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Test"

components:

  parameters:

    ProjectId:
      description: Project ID
      in: path
      name: id
      required: true
      schema:
        type: string

    TestId:
      description: Test ID
      in: path
      name: id
      required: true
      schema:
        type: string

  securitySchemes:

    ApiKey:
      description: Project or User API key
      type: apiKey
      name: apiKey
      in: query

  responses:

    ErrorMessage:
      description: Common error message
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
                description: Error message text
              code:
                type: integer
                default: 404
              ok:
                type: boolean
                default: false
              error:
                type: boolean
                default: true

    JobStartsSuccessfully:
      description: Job starts successfully
      content:
        application/json:
          schema:
            properties:
              projectId:
                type: string
                description: A unique Project ID
                example: 5e95ddf7a39e5a44428b4581
              jobId:
                type: string
                description: A unique ID for each Job
                example: 5e9602e7a39e5a46428b457f
              start:
                type: string
                description: Value `ok` means your tests have successfully started
                example: ok
              results:
                type: string
                description: The URL where you can view your results
                example: https://www.testomato.com/api/project/5e95ddf7a39e5a44428b4581/job/5e9602e7a39e5a46428b457f/results?apikey=4PJAOwTK
  schemas:
    Project:
      $ref: './schemas/Project.yaml'
    Test:
      $ref: './schemas/Test.yaml'
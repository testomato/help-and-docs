# https://swagger.io/docs/specification/about/
# https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md
# https://openapi.tools/
openapi: 3.0.3

info:
  title: "Testomato API"
  description: |
    If you would like to participate in the future development of our
    roadmap, please don't be shy! We'd love to hear your suggestions:
    support@testomato.com

  termsOfService: https://www.testomato.com/terms-of-service
  version: 1.0.0
  contact:
    email: support@testomato.com

servers:
  - url: https://testomato.com/api
    description: Testomato

paths:
  /authenticate:
    post:
      operationId: Get API token
      description: Generate API Token
      tags:
        - Authenticate
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  description: User email
                password:
                  type: string
                  description: User password
                exp:
                  type: string
                  default: '+1 hour'
                  description: |
                    Expiration string. We do not recommend using long expirations,
                    it is always safer to request a new API token.
                    
                    Accept same values as PHP [datetime modify function](https://www.php.net/manual/en/datetime.modify.php)

      responses:
        200:
          description: Successfully generated access token
          content:
            text/plain:
              schema:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    get:
      operationId: Verify API token
      description: |
        By calling this API endpoint you can verify the validity of your token.
        Response contains user information like `email` and user `id`.
      tags:
        - Authenticate
      security:
        - ApiToken: [ ]
      responses:
        200:
          description: Successfully authenticate with API token
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    description: User ID
                    example: 1
                  name:
                    type: string
                    description: User name
                    example: John Testomato
                  email:
                    type: string
                    description: User email
                    example: user@email.com
                  exp:
                    type: integer
                    description: Expiration date
                    example: 1825840726
                  tid:
                    type: string
                    description: Token identifier
                    example: "e2ew1g30xl"
                  iat:
                    type: integer
                    example: 1668074326
                    description: |
                      The "iat" (issued at) claim identifies the time at which the JWT was
                      issued.  This claim can be used to determine the age of the JWT.
                  nbf:
                    type: string
                    example: 1668074326
                    description: |
                      The "nbf" (not before) claim identifies the time before which the JWT
                      MUST NOT be accepted for processing.



  /project/create:
    post:
      operationId: New project
      description: |
        Create a new project from given URL. Response will be a new project object or error message.
      security:
        - ApiToken: [ ]
      tags:
        - Project
      requestBody:
        content:
          application/json:
            schema:
              required:
                - url
              properties:
                url:
                  type: string
                  description: URL to be checked
                  example: "https://www.example.com"
                addPresetChecks:
                  type: boolean
                  description: Create empty project (`true`) or preset project (`false`)
                  default: false
                checkInterval:
                  type: string
                  enum: [ 5 minutes, 30 minutes, 1 hour, 8 hours, 1 day, 7 days, false ]
                  description: |
                    - `not set` - default value by subscription plan
                    - `5 minutes` - every 5 minutes
                    - `30 minutes` - every 30 minutes
                    - `1 hour` - every hour
                    - `8 hours` - every 8 hours
                    - `1 day` - every day
                    - `7 days` - every week
                    - `false` - run manually, no schedule
                urls:
                  type: array
                  description: Deprecated, use `url` instead
                  deprecated: true
                  items:
                    type: string
                    example: [ "https://www.example.com","https://www.example2.com" ]
                blank:
                  type: boolean
                  deprecated: true
                  default: false
                  description: Deprecated, use `addPresetChecks` instead

      responses:
        402:
          description: You have reached the project limit of your subscription limit. Please upgrade your subscription before adding more projects.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: You have reached the project limit of your subscription limit. Please upgrade your subscription before adding more projects.
        410:
          description: We're sorry! The URL https://url seems to be invalid.
          content:
              application/json:
                schema:
                    properties:
                      message:
                          type: string
                          default: We're sorry! The URL https://url seems to be invalid.
        432:
          description: Deprecated parameter "urls", please use "url" instead.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: Deprecated parameter "urls", please use "url" instead.
        433:
          description: Deprecated parameter "blank", please use "addPresetChecks" instead.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: Deprecated parameter "blank", please use "addPresetChecks" instead.
        434:
          description: Missing mandatory parameter "url"
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: Missing mandatory parameter "url"
        400:
          description: Project creation failed with validation error.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: Oops, we're sorry! Project creation failed. Please try later or contact us.
        500:
          description: Project creation failed with fatal error (please contact us at support@testomato.com).
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: Oops, we're sorry! Project creation failed. Please try later or contact us.
        200:
          description: Project was successfully created.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: schemas/Project.yaml

  /project/{id}:
    parameters:
      - name: id
        description: A unique project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string

    get:
      operationId: Get project
      description: Retrieve project by ID
      security:
        - ApiToken: [ ]
      tags:
        - Project
      responses:
        404:
          $ref: responses/NotFound.yaml
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: schemas/Project.yaml
                  - type: object
                    properties:
                      permissions:
                        $ref: schemas/Permissions.yaml
    put:
      operationId: Project update
      description: Update selected project
      tags:
        - Project
      security:
        - ApiToken: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: schemas/Project.yaml
      responses:
        200:
          $ref: responses/SuccessMessage.yaml
        404:
          $ref: responses/NotFound.yaml
    delete:
      operationId: Project delete
      description: Delete selected project
      tags:
        - Project
      security:
        - ApiToken: [ ]
      responses:
        200:
          $ref: responses/SuccessMessage.yaml
        404:
          $ref: responses/NotFound.yaml

  /project/{id}/status:
    parameters:
      - name: id
        description: A unique project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
    get:
      operationId: Project status
      description: Return project status
      tags:
        - Project
      security:
        - ApiToken: [ ]
      responses:
        200:
          $ref: responses/ProjectStatus.yaml

  /project/{id}/simple-status:
    parameters:
      - in: path
        required: true
        name: id
        description: A unique project ID

    get:
      operationId: Simplify project status
      description: Get simplify project status
      tags:
        - Project
      security:
        - ApiToken: [ ]
      responses:
        200:
          $ref: responses/ProjectSimpleStatus.yaml

  /project/{id}/start:
    get:
      operationId: Starting project
      description: Start all checks in project
      tags:
        - Project
      security:
        - ApiToken: [ ]
      parameters:
        - name: id
          description: A unique project ID
          example: 5e9602e7a39e5a46428b457f
          allowEmptyValue: false
          required: true
          in: path
          schema:
            type: string
        - name: tests
          description: Array of
          in: query
          required: false
          example: [ '55ae166c25b395537a8b6029', '510fa4a3bd96e74c0200000b' ]
          schema:
            type: array
            items:
              type: string

      responses:
        200:
          $ref: responses/JobStartsSuccessfully.yaml

  /project/{ProjectId}/start/area/{AreaId}:
    parameters:
      - name: ProjectId
        description: A unique project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
      - name: AreaId
        description: A unique area/group ID
        example: 55ae166c25b395537a8b6029
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string

    get:
      operationId: Starting project group
      description: Starting only specific group of Tests from project
      tags:
        - Project
        - Group
      security:
        - ApiToken: [ ]
      parameters:
        - name: keep-alive
          description: Maintain the connection after starting the tests
          required: false
          example: false
          in: query
          schema:
            type: boolean
        - name: continue
          description: Send the partial result and move on?
          required: false
          example: false
          in: query
          schema:
            type: boolean
        - name: tests
          description: Array of selected Test IDs to run
          required: false
          in: query
          schema:
            type: array
            example: [ '6123aa3f136d2ab8038b4587', '51e6541cbd96e7f173000029' ]
            items:
              type: string
      responses:
        200:
          $ref: responses/JobStartsSuccessfully.yaml

  /project/{ProjectId}/job/{JobId}/results:
    parameters:
      - name: ProjectId
        description: A unique project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
      - name: JobId
        description: A unique Job ID
        example: 55ae166c25b395537a8b6029
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string

    get:
      operationId: Project results
      description: Retrieve latest project's checks results
      tags:
        - Project
      security:
        - ApiToken: [ ]
      responses:
        200:
          $ref: responses/ProjectJobResults.yaml

  /project/{id}/areas:
    parameters:
      - name: id
        description: A unique project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
    get:
      operationId: Project groups
      description: Return list of project groups/areas
      security:
        - ApiToken: [ ]
      tags:
        - Project
        - Group
      responses:
        200:
          description: List of project areas/groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: schemas/Area.yaml

  /project/{id}/users:
    parameters:
      - name: id
        description: A unique project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string

    get:
      operationId: Project users
      description: Return list of Users with access to the project
      security:
        - ApiToken: [ ]
      tags:
        - Project
      responses:
        200:
          description: Return array of User objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: schemas/User.yaml

    post:
      operationId: Add user to project
      description: Add new user to project
      security:
        - ApiToken: [ ]
      tags:
        - Project
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  description: User email
                  example: "admin@testomato.com"
                role:
                  type: string
                  enum: [ 4, 5, 6 ]
                  description: |
                    `4` - Project Admin
                    `5` - Project Developer
                    `6` - Project Guest
      responses:
        200:
          description: User was successfully add to the project
          content:
            application/json:
              schema:
                $ref: schemas/User.yaml

  /project/{id}/roles:
    parameters:
      - name: id
        description: A unique project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
    get:
      operationId: Project roles
      description: Get array of project roles
      tags:
        - Project
      security:
        - ApiToken: [ ]
      responses:
        200:
          $ref: responses/ProjectRolesList.yaml

  /project/{id}/notifications:
    parameters:
      - name: id
        description: A unique project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
    get:
      operationId: Project notifications
      description: Get project notifications settings for current user
      tags:
        - Project
      security:
        - ApiToken: [ ]

      responses:
        200:
          description: Notification settings response
          content:
            application/json:
              schema:
                $ref: schemas/Notifications.yaml
    post:
      operationId: Update notifications
      description: Update Project notifications settings for current user
      tags:
        - Project
      security:
        - ApiToken: [ ]
      responses:
        200:
          description: Notification settings response
          content:
            application/json:
              schema:
                $ref: schemas/Notifications.yaml
      requestBody:
        content:
          application/json:
            schema:
              $ref: schemas/Notifications.yaml

  /project/{id}/responseTimes:
    parameters:
      - name: id
        description: A unique project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string

      - name: start
        description: Period start date in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format
        example: 2022-10-31T00:00:00.000+01:00
        required: true
        in: query
        schema:
          type: string

      - name: end
        description: |
          Period end date in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format (default `now`)
        example: 2022-10-31T00:00:00.000+01:00
        required: false
        in: query
        schema:
          type: string
    get:
      operationId: Response times
      description: Return response times of project in selected period
      tags:
        - Project
      security:
        - ApiToken: [ ]
      responses:
        405:
          description: |
            Start time is empty or invalid (use [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) date format)
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    description: Error message
                    default: Start time is empty or invalid (use ISO8601 date format)
                  success:
                    type: boolean
                    default: false
                  ok:
                    type: boolean
                    default: false
                  error:
                    type: boolean
                    default: true
        200:
          description: Array of response times
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: schemas/ResponseTime.yaml
                example:
                  - { "responseDate": "2023-03-23T12:53:20+00:00", "dnsLookupTime": 3, "initialConnectionTime": 17, "sslTime": 26, "requestTime": 0, "waitingTime": 39, "contentDownloadTime": 7, "totalResponseTime": 89 }
                  - { "responseDate": "2023-03-23T13:10:00+00:00", "dnsLookupTime": 3.5882352941176, "initialConnectionTime": 17.352941176471, "sslTime": 30.529411764706, "requestTime": 0, "waitingTime": 42.411764705882, "contentDownloadTime": 7.6470588235294, "totalResponseTime": 101.05882352941 }
                  - { "responseDate": "2023-03-23T13:26:40+00:00", "dnsLookupTime": 3.5625, "initialConnectionTime": 18.5625, "sslTime": 30.25, "requestTime": 0, "waitingTime": 41.375, "contentDownloadTime": 7.25, "totalResponseTime": 99.1875 }

  /project/{id}/uptime:
    parameters:
      - name: id
        description: A unique project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string

      - name: start
        description: Period start date in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format
        example: 2022-10-31T00:00:00.000+01:00
        required: true
        in: query
        schema:
          type: string

      - name: end
        description: |
          Period end date in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) format (default `now`)
        example: 2022-10-31T00:00:00.000+01:00
        required: false
        in: query
        schema:
          type: string
    get:
      operationId: Uptime
      description: Return uptimes by days
      tags:
        - Project
      security:
        - ApiToken: [ ]
      responses:
        200:
          description: Response times
          content:
            application/json:
              schema:
                $ref: schemas/Uptime.yaml
  /project/{id}/permissions:
    parameters:
      - name: id
        description: A unique project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
    get:
      operationId: Project permissions
      description: Return user related permissions for selected project
      tags:
        - Project
      security:
        - ApiToken: [ ]
      responses:
        200:
          description: Return user permissions
          content:
            application/json:
              schema:
                $ref: schemas/Permissions.yaml
  /tests/{id}:
    parameters:
      - name: id
        description: A unique test ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string

    get:
      operationId: Get test
      description: Retrieve test by unique test ID
      tags:
        - Checks
      responses:
        200:
          description: Test response
          content:
            application/json:
              schema:
                $ref: schemas/Test.yaml

components:
  securitySchemes:
    ApiToken:
      description: |
        The Testomato API Token can be obtained from the [User Profile](https://www.testomato.com/user/profile) 
        or directly through the API by a `POST` request send to `/api/authenticate` visit 
        [Get API token](/api/get-api-token) for more information.
        
        Testomato API token use [JWT schema](https://jwt.io/).
      type: http
      scheme: bearer
      bearerFormat: JWT
openapi: 3.0.3
info:
  title: Testomato API
  description: |
    If you would like to participate in the future development of our
    roadmap, please don't be shy! We'd love to hear your suggestions:
    support@testomato.com
  termsOfService: 'https://www.testomato.com/terms-of-service'
  version: 1.0.0
  contact:
    email: support@testomato.com
servers:
  - url: 'https://testomato.com/api/'
    description: Testomato
paths:
  /project/create:
    post:
      operationId: Create Project
      description: |
        Create a new Project from array of URLs. Successful response will be
        formatted as [JSONP](https://en.wikipedia.org/wiki/JSONP) stream.
        You can add **up to 30 URLs** at once.
      security:
        - ApiKey: []
      tags:
        - Project
      parameters:
        - name: period
          required: false
          description: Check period interval as string
          in: query
          schema:
            type: string
            enum:
              - 5 minutes
              - 30 minutes
              - 1 hour
              - 8 hours
              - 1 day
              - 7 days
              - false
            default: 5 minutes
      requestBody:
        content:
          application/json:
            schema:
              properties:
                urls:
                  type: array
                  items:
                    type: string
                  description: Array of URLs
                  example:
                    - 'https://www.example.com'
                    - 'https://testomato.com'
                blank:
                  type: boolean
                  default: false
                  description: Create empty project (`true`) or preset project (`false`)
      responses:
        '200':
          description: 'There Successfully created projects. Response is <a href="https://en.wikipedia.org/wiki/JSONP" target="_blank">JSONP</a> payload with individual projects.'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1project~1%7Bid%7D/put/requestBody/content/application~1json/schema'
                  - type: object
                    properties:
                      originalUrl:
                        description: Original URL that was processed
                        type: string
        '400':
          description: Error when trying to *create more than 30 projects* at once or `period` parameters is invalid.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: Sorry! You can only add 30 projects at a time.
                  error:
                    type: boolean
                    default: true
        '403':
          description: Error when you have reached your **subscription project limit**.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: You have reached your project limit.
                  error:
                    type: boolean
                    default: true
        '406':
          description: When you try send invalid or not supported URL
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: 'Oops, we''re sorry! The URL "xxx" is not valid'
                  error:
                    type: boolean
                    default: true
        '500':
          description: Project creation failed with fatal error (please contact us at support@testomato.com).
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    default: 'Oops, we''re sorry! Project creation failed. Please try later or contact us.'
                  error:
                    type: boolean
                    default: true
  '/project/{id}':
    parameters:
      - name: id
        description: A unique Project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
    get:
      operationId: Get Project
      description: Retrieve Project by ID
      security:
        - ApiKey: []
      tags:
        - Project
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1project~1%7Bid%7D/put/requestBody/content/application~1json/schema'
                  - type: object
                    properties:
                      permissions:
                        type: object
                        description: Project permissions for current user
                        properties:
                          read:
                            type: boolean
                            description: Can current user view results?
                          run:
                            type: boolean
                            description: Can current user run checks?
                          editTest:
                            type: boolean
                          edit:
                            type: boolean
                            description: Can current user edit project settings?
                          manageUsers:
                            description: Can current user manage others?
                            type: boolean
                          apiKey:
                            description: Can current user view apiKey?
                            type: boolean
                          leave:
                            description: Can current user leave project?
                            type: boolean
        '404':
          description: Object not found error
          content:
            application/json:
              schema:
                properties:
                  message:
                    description: Error message text
                    default: Object not found
                    type: string
                  code:
                    description: Error code number
                    default: 404
                    type: integer
                  ok:
                    type: boolean
                    default: false
                  error:
                    type: boolean
                    default: true
    put:
      operationId: Update Project
      description: Update selected Project
      tags:
        - Project
      security:
        - ApiKey: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  description: Project ID
                  example: 50a9f72f14db3be812000233
                  type: string
                title:
                  description: Project title
                  type: string
                url:
                  description: Project base URL
                  example: 'https://testomato.com'
                  type: string
                period:
                  description: Period of test checking - `false` means never check Test automatically.
                  default: 5 minutes
                  enum:
                    - 5 minutes
                    - 30 minutes
                    - 1 hour
                    - 8 hours
                    - 1 day
                    - 7 days
                    - false
                  type: string
                uptimeUrl:
                  description: Uptime URL
                  type: string
                uptimeEnabled:
                  description: Uptime period in seconds - `false` means uptime is disabled
                  type: string
                  enum:
                    - false
                    - 15
                    - 30
                    - 60
                apiKey:
                  description: apiKey that can be used for the project operations
                  example: 123456
                  type: string
                payerId:
                  description: Identification of the project owner.
                  type: integer
                location:
                  description: Project check location
                  type: string
                  enum:
                    - eu
                    - de
                    - gb
                    - ca
                    - us
                    - tx
                    - dc
                    - sg
                    - hk
                checkDefaultErrors:
                  type: boolean
                  default: true
                created:
                  description: Date and time of project creation
                  type: string
                  format: date-time
                userAgent:
                  description: User agent
                  default: 'Testomatobot/1.0 (Linux x86_64; +https://www.testomato.com/testomatobot) minicrawler/5.2.2'
                  type: string
                timeout:
                  description: Cumulated project timeout in seconds
                  type: integer
                  default: 3
                delay:
                  description: Bulk request delay in miliseconds
                  type: integer
                  format: int64
                  default: 50
                userIds:
                  type: array
                  description: Array of users ID's with access to the project
                  items:
                    type: integer
                name:
                  description: Project name was replaced by Project title
                  type: string
                  deprecated: true
      responses:
        '200':
          description: Common success massage
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  code:
                    type: integer
                    default: 200
                  ok:
                    type: boolean
                    default: true
                  error:
                    type: boolean
                    default: false
        '404':
          $ref: '#/paths/~1project~1%7Bid%7D/get/responses/404'
    delete:
      operationId: Delete Project
      description: Delete selected Project
      tags:
        - Project
      security:
        - ApiKey: []
      responses:
        '200':
          $ref: '#/paths/~1project~1%7Bid%7D/put/responses/200'
        '404':
          $ref: '#/paths/~1project~1%7Bid%7D/get/responses/404'
  '/project/{id}/status':
    parameters:
      - name: id
        description: A unique Project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
    get:
      operationId: Get Project status
      description: Get Project status
      tags:
        - Project
      security:
        - ApiKey: []
      responses:
        '200':
          description: Successful response - full project status
          content:
            application/json:
              schema:
                properties:
                  project:
                    type: object
                    description: Basic project information
                    properties:
                      id:
                        type: string
                        description: A unique Project ID
                      lastRun:
                        type: integer
                        description: Unix timestamp of last run
                        example: 1665407081
                      lastChange:
                        type: integer
                        description: Unix timestamp of last change
                        example: 1665263416
                      reported:
                        type: string
                        description: Was reported
                        example: ok
                      status:
                        type: string
                      msg:
                        type: string
                        description: Longer message about project status
                        example: Server returned HTTP status 200
                      shortMessage:
                        type: string
                        description: Short project status message
                        example: 200
                  total:
                    type: integer
                    description: Total count of checks
                    example: 12
                  failed:
                    type: integer
                    description: How much check has failed
                    example: 0
                  now:
                    type: integer
                    description: Current date time unix timestamp
                    example: 1665407098
                  tests:
                    type: array
                    items:
                      $ref: '#/paths/~1tests~1%7Bid%7D/get/responses/200/content/application~1json/schema'
  '/project/{id}/simple-status':
    parameters:
      - in: path
        required: true
        name: id
        description: A unique Project ID
    get:
      operationId: Get Project status - simplify
      description: Get simplify Project status
      tags:
        - Project
      security:
        - ApiKey: []
      responses:
        '200':
          description: Successful response - simplify project status
          content:
            application/json:
              schema:
                properties:
                  tests:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        url:
                          type: string
                        status:
                          type: string
                          enum:
                            - OK
                            - Error message
                    example:
                      - name: Homepage
                        url: 'https://www.testomato.com'
                        status: OK
                      - name: Contact
                        url: 'https://www.testomato.com/contact'
                        status: Missing "example" in Website TEXT
                  total:
                    description: Total count of checks
                    type: integer
                    example: 2
                  failed:
                    description: Count of failing checks
                    example: 1
  '/project/{id}/start':
    get:
      operationId: Starting Project
      description: Start all checks in project
      tags:
        - Project
      security:
        - ApiKey: []
      parameters:
        - name: id
          description: A unique Project ID
          example: 5e9602e7a39e5a46428b457f
          allowEmptyValue: false
          required: true
          in: path
          schema:
            type: string
        - name: tests
          description: Array of
          in: query
          required: false
          example:
            - 55ae166c25b395537a8b6029
            - 510fa4a3bd96e74c0200000b
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Job starts successfully
          content:
            application/json:
              schema:
                properties:
                  projectId:
                    type: string
                    description: A unique Project ID
                    example: 5e95ddf7a39e5a44428b4581
                  jobId:
                    type: string
                    description: A unique ID for each Job
                    example: 5e9602e7a39e5a46428b457f
                  start:
                    type: string
                    description: Value `ok` means your tests have successfully started
                    example: ok
                  results:
                    type: string
                    description: The URL where you can view your results
                    example: 'https://www.testomato.com/api/project/5e95ddf7a39e5a44428b4581/job/5e9602e7a39e5a46428b457f/results?apikey=4PJAOwTK'
  '/project/{ProjectId}/start/area/{AreaId}':
    parameters:
      - name: ProjectId
        description: A unique Project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
      - name: AreaId
        description: A unique Area/Group ID
        example: 55ae166c25b395537a8b6029
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
    get:
      operationId: Starting Project Group
      description: Starting only specific group of Tests from Project
      tags:
        - Project
        - Group
      security:
        - ApiKey: []
      parameters:
        - name: keep-alive
          description: Maintain the connection after starting the tests
          required: false
          example: false
          in: query
          schema:
            type: boolean
        - name: continue
          description: Send the partial result and move on?
          required: false
          example: false
          in: query
          schema:
            type: boolean
        - name: tests
          description: Array of selected Test IDs to run
          required: false
          in: query
          schema:
            type: array
            example:
              - 6123aa3f136d2ab8038b4587
              - 51e6541cbd96e7f173000029
            items:
              type: string
      responses:
        '200':
          $ref: '#/paths/~1project~1%7Bid%7D~1start/get/responses/200'
  '/project/{ProjectId}/job/{JobId}/results':
    parameters:
      - name: ProjectId
        description: A unique Project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
      - name: JobId
        description: A unique Job ID
        example: 55ae166c25b395537a8b6029
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
    get:
      operationId: Get Project results
      description: Retrieve latest Project's checks results
      tags:
        - Project
      security:
        - ApiKey: []
      responses:
        '200':
          description: Project results
          content:
            application/json:
              schema:
                properties:
                  jobId:
                    type: string
                    description: A unique ID for each project job
                    example: 6346802f314d328b4a8b4579
                  total:
                    type: integer
                    description: The total number of tests performed
                    example: 28
                  failed:
                    type: integer
                    description: The number of failed tests
                    example: 0
                  processed:
                    type: boolean
                    description: Has this job already been processed
                    example: true
                  persist:
                    type: boolean
                    description: Is this job temporary of persist
                    example: true
                  startedAt:
                    type: integer
                    description: Time when job started (unix timestamp)
                    example: 1665564719
                  duration:
                    type: number
                    description: Duration of the job in seconds
                    example: 2.1946158409119
                  mode:
                    type: number
                    example: 0
                  areas:
                    description: List of areas
                    type: array
                    items:
                      type: string
                  results:
                    description: 'Array of test results -- each result has a testId, testName etc.'
                    type: array
                    items:
                      type: string
  '/project/{id}/areas':
    parameters:
      - name: id
        description: A unique Project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
    get:
      operationId: Ger Project Groups
      description: Return list of project Groups/Areas
      security:
        - ApiKey: []
      tags:
        - Project
        - Group
      responses:
        '200':
          description: List of Project Groups
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: A group of tests
                  properties:
                    id:
                      type: string
                      description: A unique Areas/Group ID
                      example: 54c0fe237c3391ac488b4567
                    projectId:
                      type: string
                      description: A unique parent Project ID
                      example: 50a9f72f14db3be812000233
                    name:
                      type: string
                      description: Name of group
                      example: Public
                    public:
                      description: 'Are the Test target URLs in the Group accessible without password protected or HTTP authentication? Value `true` means they are freely accessible `false` means yes, they are protected.'
                      type: boolean
                      default: true
                    rules:
                      description: Group rules that are applied to all tests in the Group.
                      type: array
                      example: []
                      items:
                        type: array
                        items:
                          $ref: '#/paths/~1tests~1%7Bid%7D/get/responses/200/content/application~1json/schema/properties/status/properties/rules/items'
                    form:
                      type: object
                      description: HTML Form
                      properties:
                        checksum:
                          type: string
                        enabled:
                          type: boolean
                        action:
                          type: string
                        originalAction:
                          type: string
                        relativeAction:
                          type: string
                        method:
                          type: string
                        params:
                          type: string
                        html:
                          type: string
                        baseUrl:
                          type: string
                        identifier:
                          type: string
                    httpAuth:
                      type: object
                      required: false
                      description: Password-protected areas may have a saved HTTP auth authentications
                      example:
                        user: nice
                        password: test
                        url: 'https://www.testomato.com/httpauth'
                      properties:
                        user:
                          type: string
                        password:
                          description: HTTP
                          type: string
                        url:
                          description: HTTP Auth URL address
                          type: string
  '/project/{id}/regenerateApiKey':
    parameters:
      - name: id
        description: A unique Project ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
    post:
      operationId: Regenerate API Key
      description: Regenerate project API key
      tags:
        - Project
      security:
        - ApiKey: []
      responses:
        '200':
          description: Successfully regenerated Project API key
          content:
            application/json:
              schema:
                properties:
                  apiKey:
                    type: string
                    example: 123456
                    description: New API key
  '/tests/{id}':
    parameters:
      - name: id
        description: A unique Test ID
        example: 5e9602e7a39e5a46428b457f
        allowEmptyValue: false
        required: true
        in: path
        schema:
          type: string
    get:
      operationId: Get Test
      description: Retrieve test
      tags:
        - Checks
      responses:
        '200':
          description: Test response
          content:
            application/json:
              schema:
                type: object
                description: A group of individual checks
                properties:
                  id:
                    type: string
                    example: 50a9f73014db3ae812000234
                    description: Check id
                  enabled:
                    type: boolean
                    example: true
                    default: true
                  areaId:
                    example: 55ae166c25b395537a8b6030
                    description: Area ID
                  name:
                    type: string
                    example: Homepage
                    description: Name of check
                  url:
                    type: string
                    example: 'https://testomato.com'
                    description: URL of check
                  notice:
                    type: string
                    example: ''
                    description: Check notice
                  type:
                    type: string
                    example: simple
                    enum:
                      - homepage
                      - simple
                      - favicon
                      - robots
                  run:
                    type: string
                    example: completed
                    enum:
                      - completed
                      - running
                  flags:
                    type: array
                    example:
                      - configured
                    description: Test flags e.g. `configured`
                  status:
                    type: object
                    properties:
                      status:
                        type: string
                        example: ok
                      failures:
                        type: array
                      rules:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: text
                              description: Type of check
                              enum:
                                - 'text html status header location title meta-description meta-og:title meta-og:description meta-og:image meta-og:image meta-og:image meta-og:type meta-og:url meta-og:site_name meta-og:locale meta-og:updated_time meta-og:logo meta-article:modified_time meta-article:published_time meta-article:publisher meta-article:section meta-article:tag meta-twitter:title meta-twitter:image meta-twitter:image meta-twitter:description meta-twitter:card meta-twitter:site meta-twitter:creator meta-itemprop:name meta-itemprop:author meta-itemprop:description meta-itemprop:image'
                            op:
                              type: string
                              enum:
                                - eq
                                - sub
                                - '!sub'
                                - match
                                - '!match'
                                - xpath
                              example: sub
                              description: |
                                Operators can be: `eq` is equal to, `sub` contains, `!sub` does not contains,  `match` for exact match, `!match` for does not match and `xpath` for Xpath checks.
                            val:
                              type: string
                              example: 123456
                              description: Value that will be used for check
                            origin:
                              type: string
                              example: check
                              description: Original of the check
                            templateId:
                              type: string
                              description: Optional parameter if check use a Template
                            order:
                              type: integer
                              description: Order of the check
                      response:
                        type: object
                        properties:
                          status:
                            type: string
                            example: 200
                          httpStatus:
                            type: string
                            example: 200
                          baseUrl:
                            type: string
                            example: 'https://testomato.com'
                          contentType:
                            type: string
                            example: text/html
                          httpHeader:
                            type: string
                            example: ":status: 200\r\nserver: nginx\r\ndate: Mon, 10 Oct 2022 15:04:05 GMT\r\ncontent-type: text/html;"
                          processTime:
                            type: number
                            example: 0.037
                          size:
                            type: number
                            description: Size of response in case of check error
                            example: false
                          redirects:
                            type: array
                            description: List of redirections
                          timing:
                            type: array
                            items:
                              properties:
                                metrics:
                                  type: string
                                value:
                                  type: integer
                              example:
                                metrics: DNS Lookup
                                value: 1
                  templateId:
                    type: string
                    description: Template ID if any
                    example: ''
                  templateVars:
                    type: array
                    description: Template variables if any
                    example: []
                  options:
                    type: object
                    properties:
                      '2':
                        type: boolean
                        default: false
                        description: Allow HTTP/1 requests only
                      '6':
                        type: boolean
                        default: false
                        description: Allow only IPv6 request
                      g:
                        type: boolean
                        default: false
                        description: Do not accept gzip encoding
                      l:
                        type: boolean
                        default: false
                        description: Do not follow redirects
                      w:
                        type: string
                        default: ''
                        description: Extra HTTP headers
components:
  securitySchemes:
    ApiKey:
      description: Project or User API key
      type: apiKey
      name: apiKey
      in: query

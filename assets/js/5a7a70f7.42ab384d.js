"use strict";(self.webpackChunkhelp=self.webpackChunkhelp||[]).push([[9405],{15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>h});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),g=l(n),d=a,h=g["".concat(s,".").concat(d)]||g[d]||u[d]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[g]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},28274:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(58168),a=(n(96540),n(15680));const o={id:"string-checks",title:"String checks",sidebar_label:"String checks"},i=void 0,c={unversionedId:"checks/string-checks",id:"checks/string-checks",title:"String checks",description:"Testomato allow create string checks for two type of page content. Those simple checks can be created for:",source:"@site/docs/checks/02-string-checks.md",sourceDirName:"checks",slug:"/checks/string-checks",permalink:"/checks/string-checks",draft:!1,editUrl:"https://github.com/testomato/help.testomato.com/edit/master/docs/checks/02-string-checks.md",tags:[],version:"current",lastUpdatedAt:1618859174,formattedLastUpdatedAt:"Apr 19, 2021",sidebarPosition:2,frontMatter:{id:"string-checks",title:"String checks",sidebar_label:"String checks"},sidebar:"docs",previous:{title:"Introduction",permalink:"/checks/introduction"},next:{title:"Semantic checks",permalink:"/checks/semantic"}},s={},l=[{value:"How regular expressions are processed",id:"how-regular-expressions-are-processed",level:3},{value:"When use <code>Text on page</code> when <code>HTML on page</code>?",id:"when-use-text-on-page-when-html-on-page",level:3}],p={toc:l},g="wrapper";function u(e){let{components:t,...o}=e;return(0,a.yg)(g,(0,r.A)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Testomato allow create string checks for two type of page content. Those simple checks can be created for:"),(0,a.yg)("p",null,(0,a.yg)("img",{alt:"String checks",src:n(32304).A,width:"1052",height:"170"})),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("inlineCode",{parentName:"li"},"HTML on page")," - represents raw source code that we downloaded from given URL"),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("inlineCode",{parentName:"li"},"Text on page")," - represents just readeable text from given URL")),(0,a.yg)("p",null,"Then you can use following ",(0,a.yg)("strong",{parentName:"p"},"operators"),":"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"contains")," - check that downloaded content contains given string with ",(0,a.yg)("a",{parentName:"li",href:"https://www.php.net/manual/en/function.substr.php"},"substr()")," PHP function"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"does not contain")," - check that content does not contain given string"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"equals")," - content is exactly same"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"matches")," - check that content match regular expression with ",(0,a.yg)("a",{parentName:"li",href:"https://www.php.net/manual/en/function.preg-match.php"},"preg_match()")," PHP function"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"does not match")," - check that content not match")),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},(0,a.yg)("strong",{parentName:"p"},"String checks")," are case sensitive, so make sure you ",(0,a.yg)("strong",{parentName:"p"},"PaY ClosE AtTentioN")," to the text you enter.")),(0,a.yg)("h3",{id:"how-regular-expressions-are-processed"},"How regular expressions are processed"),(0,a.yg)("p",null,"Testomato process and escape all users inputs including regular expressions. We are using ",(0,a.yg)("inlineCode",{parentName:"p"},"{")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"}")," for wrapping your\nregex and also add following ",(0,a.yg)("a",{parentName:"p",href:"https://www.php.net/manual/en/reference.pcre.pattern.modifiers.php"},"Pattern Modifiers"),":"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"u")," pattern and subject strings are treated as UTF-8. An invalid subject will cause the preg_* function to match nothing;"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"m")," subject strings are treated as multi-line string")),(0,a.yg)("p",null,"You can debug your regex with ",(0,a.yg)("a",{parentName:"p",href:"https://www.phpliveregex.com/"},"https://www.phpliveregex.com/")),(0,a.yg)("h3",{id:"when-use-text-on-page-when-html-on-page"},"When use ",(0,a.yg)("inlineCode",{parentName:"h3"},"Text on page")," when ",(0,a.yg)("inlineCode",{parentName:"h3"},"HTML on page"),"?"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"HTML on page")," is content as we downloaded from given url, only encoded to ",(0,a.yg)("inlineCode",{parentName:"p"},"utf8")," - it's usefull for checking whole content including\nHTML tags or meta information in ",(0,a.yg)("inlineCode",{parentName:"p"},"<head></head>"),". "),(0,a.yg)("p",null," ",(0,a.yg)("inlineCode",{parentName:"p"},"Text on page")," is subset of ",(0,a.yg)("inlineCode",{parentName:"p"},"HTML on page")," - we just remove all markup (HTML tags,\nheader, scripts etc.) and then apply all your checks."))}u.isMDXComponent=!0},32304:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/string-checks-953cceabd74d1ed4ec9f5f489f8f0864.png"}}]);